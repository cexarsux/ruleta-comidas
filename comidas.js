let comidas = [];
 
const frasesBienvenida = [
    "me alegra que estÃ©s aquÃ­.",
    "tu sonrisa hace especial este proyecto.",
    "esta ruleta es solo una excusa para recordarte cuÃ¡nto te amo.",
    "hoy serÃ¡ un gran dÃ­a porque estÃ¡s tÃº.",
    "todo lo que hago, lo hago con amor por ti.",
    "estÃ¡s en mis pensamientos todo el tiempo.",
    "tÃº haces que todo valga la pena.",
];

function obtenerFraseBienvenida() {
    return frasesBienvenida[Math.floor(Math.random() * frasesBienvenida.length)];
}
 
Swal.fire({
    icon: 'info',
    title: 'Hola de nuevo amor ðŸ’–',
    text: obtenerFraseBienvenida(),
    confirmButtonText: 'ðŸ¥°'
});

const frasesLindas = [
    "Estas hermosa.",
    "Tu esposo te ama.",
    "Eres lo mejor de mi vida.",
    "Gracias por existir.",
    "Tu sonrisa alegra mi mundo.",
    "No olvides que te amo.",
    "Contigo todo es mejor.",
    "Hola miau mor ðŸ˜». ",
    "No hay nadie como tÃº ðŸ˜‰. ",
    "TÃº eres la flor mÃ¡s linda ðŸŒ¼.",
    "PodazÃ³n! tu amor me hace gigante.",
    "CayÃ³ un unicornio en tu patio y vas a ver que darle de comer?",
    "Eres mi dulce favorito de la gota de miel ðŸ˜‹."
];

function obtenerFraseLinda() {
    return frasesLindas[Math.floor(Math.random() * frasesLindas.length)];
}

// FunciÃ³n para actualizar estadÃ­sticas (NUEVA)
function actualizarStats() {
    $('#totalComidas').text(comidas.length);
    $('#totalElegidas').text($('#tbElegidas tbody tr').not(':has(.empty-state)').length);
}

function cargarComidas() {
    const data = localStorage.getItem("comidas");
    if (data) {
        comidas = JSON.parse(data);
        renderizarTabla();
    }
    actualizarStats(); // NUEVA: Actualizar stats al cargar
}

function guardarComidas() {
    localStorage.setItem("comidas", JSON.stringify(comidas));
    actualizarStats(); // NUEVA: Actualizar stats al guardar
}

// MEJORADA: Nueva funciÃ³n de renderizado con iconos y botones bonitos
function renderizarTabla() {
    const $tbody = $("#tbComidas tbody");
    $tbody.empty();
    
    if (comidas.length === 0) {
        $tbody.append(`
            <tr>
                <td colspan="2" class="empty-state">
                    <i class="fas fa-plate-wheat"></i>
                    <p>No hay comidas agregadas aÃºn.<br>Â¡Empieza agregando tus platillos favoritos!</p>
                </td>
            </tr>
        `);
        return;
    }
    
    comidas.forEach((comida, index) => {
        $tbody.append(`
            <tr class="fade-in">
                <td>
                    <div class="food-item">
                        <div class="food-icon">
                            <i class="fas fa-utensils"></i>
                        </div>
                        ${comida}
                    </div>
                </td>
                <td>
                    <button class="btn btn-danger btn-small" onclick="eliminarComida(${index})">
                        <i class="fas fa-trash"></i>
                    </button>
                </td>
            </tr>
        `);
    });
}

// MEJORADA: ConfirmaciÃ³n con SweetAlert2 antes de eliminar
function eliminarComida(index) {
    const comida = comidas[index];
    
    Swal.fire({
        title: 'Â¿EstÃ¡s seguro mi amor?',
        text: `Â¿Quieres eliminar "${comida}" de tu lista?`,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#ff6a88',
        cancelButtonColor: '#667eea',
        confirmButtonText: 'SÃ­, eliminar',
        cancelButtonText: 'Mejor no'
    }).then((result) => {
        if (result.isConfirmed) {
            comidas.splice(index, 1);
            guardarComidas();
            renderizarTabla();

            Swal.fire({
                icon: 'success',
                title: 'Eliminado',
                text: `${comida} fue eliminado de tu lista. ${obtenerFraseLinda()}`,
                timer: 2000,
                showConfirmButton: false
            });
        }
    });
}

// MEJORADA: Validaciones y mensajes bonitos
$("#btnAgregar").on("click", function () {
    const comida = $("#txtComida").val().trim();
    
    // ValidaciÃ³n: campo vacÃ­o
    if (!comida) {
        Swal.fire({
            icon: 'warning',
            title: 'Â¡Oops mi amor!',
            text: 'Por favor escribe el nombre de una comida',
            confirmButtonText: 'Okey ðŸ’•'
        });
        return;
    }
    
    // NUEVA: ValidaciÃ³n de duplicados
    if (comidas.includes(comida)) {
        Swal.fire({
            icon: 'info',
            title: 'Ya existe esa comida',
            text: `"${comida}" ya estÃ¡ en tu lista preciosa`,
            confirmButtonText: 'Entendido ðŸ˜Š'
        });
        return;
    }
    
    comidas.push(comida);
    guardarComidas();
    renderizarTabla();
    $("#txtComida").val('');
    
    // MEJORADA: Mensaje de Ã©xito con frase linda
    Swal.fire({
        icon: 'success',
        title: 'Â¡Agregado!',
        text: `${comida} se agregÃ³ a tu lista. ${obtenerFraseLinda()}`,
        timer: 2000,
        showConfirmButton: false
    });
});

// MEJORADA: Mejor manejo de la ruleta con animaciÃ³n
$("#btnGirar").on("click", function () {
    const seleccionadas = [...comidas];
    
    if (seleccionadas.length < 6) {
        Swal.fire({
            icon: 'warning',
            title: 'Necesitas mÃ¡s comidas mi amor',
            text: "Debe haber al menos 6 comidas registradas para girar la ruleta.",
            confirmButtonText: 'Entendido ðŸ’–'
        });
        return;
    }
    
    // NUEVA: AnimaciÃ³n de giro
    const $btnGirar = $(this);
    $btnGirar.addClass('spin');
    $btnGirar.prop('disabled', true);
    
    setTimeout(() => {
        $btnGirar.removeClass('spin');
        $btnGirar.prop('disabled', false);
        
        seleccionadas.sort(() => Math.random() - 0.5);
        const elegidas = seleccionadas.slice(0, 6);

        const $tbody = $("#tbElegidas tbody");
        $tbody.empty();
        
        elegidas.forEach(comida => {
            $tbody.append(`
                <tr class="fade-in">
                    <td>
                        <div class="food-item">
                            <div class="food-icon">
                                <i class="fas fa-star"></i>
                            </div>
                            ${comida}
                        </div>
                    </td>
                </tr>
            `);
        });
        
        actualizarStats(); // NUEVA: Actualizar stats despuÃ©s de girar
        
        // MEJORADA: Mensaje de Ã©xito con frase linda
        Swal.fire({
            icon: 'success',
            title: 'Â¡Ruleta girada!',
            text: `Se eligieron tus 6 comidas para esta semana. ${obtenerFraseLinda()}`,
            confirmButtonText: 'Gracias mi amor ðŸ’•'
        });
    }, 1000);
});

// MEJORADA: Mejor manejo de exportar
$("#btnExportar").on("click", function () {
    if (comidas.length === 0) {
        Swal.fire({
            icon: 'warning',
            title: 'No hay comidas que exportar',
            text: 'Agrega algunas comidas primero mi amor',
            confirmButtonText: 'Okey ðŸ’–'
        });
        return;
    }
    
    const blob = new Blob([JSON.stringify(comidas, null, 2)], { type: "application/json" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = "comidas-familia-rodriguez.json";
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    // NUEVA: Mensaje de confirmaciÃ³n
    Swal.fire({
        icon: 'success',
        title: 'Â¡Exportado!',
        text: `Tus comidas se descargaron correctamente. ${obtenerFraseLinda()}`,
        timer: 2000,
        showConfirmButton: false
    });
});

// BotÃ³n para abrir el selector de archivo
$("#btnImportar").on("click", function () {
    $("#fileImportar").click();
});

// MEJORADA: Mejor manejo de importar con validaciones
$("#fileImportar").on("change", function (e) {
    const file = e.target.files[0];
    if (!file) return;

    const reader = new FileReader();
    reader.onload = function (e) {
        try {
            const data = JSON.parse(e.target.result);
            if (Array.isArray(data)) {
                comidas = data;
                guardarComidas();
                renderizarTabla();
                Swal.fire({
                    icon: 'success',
                    title: 'Â¡Ã‰xito!',
                    text: `Comidas importadas con Ã©xito. ${obtenerFraseLinda()}`,
                    confirmButtonText: 'ðŸ’– Gracias guapo'
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error en el archivo',
                    text: "El archivo no contiene una lista vÃ¡lida de comidas.",
                    confirmButtonText: 'Entendido'
                });
            }
        } catch (err) {
            Swal.fire({
                icon: 'error',
                title: 'Error al leer el archivo',
                text: "No se pudo leer el archivo: " + err.message,
                confirmButtonText: 'Entendido'
            });
        }
    };
    reader.readAsText(file);

    // Limpiar el input para que se pueda volver a seleccionar el mismo archivo despuÃ©s
    $(this).val('');
});

// NUEVA: Funcionalidad de Enter para agregar comida
$("#txtComida").keypress(function(e) {
    if (e.which === 13) { // Enter key
        $("#btnAgregar").click();
    }
});

// NUEVA: Inicializar tabla de elegidas con estado vacÃ­o
function inicializarTablaElegidas() {
    const $tbody = $("#tbElegidas tbody");
    if ($tbody.find('tr').length === 0) {
        $tbody.append(`
            <tr>
                <td class="empty-state">
                    <i class="fas fa-magic"></i>
                    <p>Â¡Usa la ruleta para elegir tus comidas!</p>
                </td>
            </tr>
        `);
    }
}

// Inicializar
$(document).ready(function() {
    cargarComidas();
    inicializarTablaElegidas();
    actualizarStats();
});